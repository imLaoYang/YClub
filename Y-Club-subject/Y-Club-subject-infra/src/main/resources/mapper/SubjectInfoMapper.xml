<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yang.subject.infra.basic.mapper.SubjectInfoMapper">

    <resultMap id="BaseResultMap" type="com.yang.subject.infra.basic.entity.SubjectInfo">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="subjectName" column="subject_name" jdbcType="VARCHAR"/>
            <result property="subjectDifficult" column="subject_difficult" jdbcType="TINYINT"/>
            <result property="settleName" column="settle_name" jdbcType="VARCHAR"/>
            <result property="subjectType" column="subject_type" jdbcType="TINYINT"/>
            <result property="subjectScore" column="subject_score" jdbcType="TINYINT"/>
            <result property="subjectParse" column="subject_parse" jdbcType="VARCHAR"/>
            <result property="createdBy" column="created_by" jdbcType="VARCHAR"/>
            <result property="createdTime" column="created_time" jdbcType="TIMESTAMP"/>
            <result property="updateBy" column="update_by" jdbcType="VARCHAR"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
            <result property="isDeleted" column="is_deleted" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,subject_name,subject_difficult,
        settle_name,subject_type,subject_score,
        subject_parse,created_by,created_time,
        update_by,update_time,is_deleted
    </sql>
    <insert id="add" useGeneratedKeys="true" keyProperty="id">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            select last_insert_id()
        </selectKey>
        insert into y_club.subject_info(subject_name, subject_difficult, settle_name, subject_type, subject_score,
        subject_parse, created_by, created_time, update_by, update_time)
        value
        (#{subjectInfo.subjectName},#{subjectInfo.subjectDifficult},#{subjectInfo.settleName},#{subjectInfo.subjectType},#{subjectInfo.subjectScore},#{subjectInfo.subjectParse},#{subjectInfo.createdBy},#{subjectInfo.createdBy},#{subjectInfo.updateBy},#{subjectInfo.updateTime})
    </insert>

    <select id="getSubjectPage" resultMap="BaseResultMap">

        select si.id,si.subject_name, si.subject_difficult, si.subject_type, si.subject_score, si.subject_parse
        from y_club.subject_info si
        left join y_club.subject_mapping sm on si.id = sm.subject_id
        where
             sm.category_id = #{categoryId}
            and sm.label_id = #{labelId}
            and si.is_deleted = 0
            and sm.is_deleted = 0
        <if test="subjectInfo.subjectDifficult != null">
            and si.subject_difficult = #{subjectInfo.subjectDifficult}
        </if>
            limit #{start},#{pageSize}

    </select>

    <select id="countByCondition" resultType="java.lang.Long">
        select count(1)
        from y_club.subject_info si
        left join y_club.subject_mapping sm on si.id = sm.subject_id
        where  sm.category_id = #{categoryId}
            and sm.label_id =#{labelId}
        <if test="subjectInfo.subjectDifficult != null">
            and si.subject_difficult = #{subjectInfo.subjectDifficult}
        </if>
            and si.is_deleted = 0 and sm.is_deleted = 0

    </select>


</mapper>
